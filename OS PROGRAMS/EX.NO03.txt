#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <sys/wait.h>
int main() {
 pid_t pid;
 // Fork a child process
 pid = fork();

if (pid < 0) { // Error handling
 fprintf(stderr, "Fork failed\n");
 exit(1);
 }
 else if (pid == 0) { // Child process
 printf("I am the child process, pid=%d\n", getpid());
 // Execute a command using exec
 execlp("/bin/ls", "ls", NULL);
 }
 else { // Parent process
 printf("I am the parent process, pid=%d\n", getpid());
 // Wait for the child process to complete
 wait(NULL);
 printf("Child process has completed\n");
 }
 // Close the program
 printf("Exiting program\n");
 exit(0);
} 